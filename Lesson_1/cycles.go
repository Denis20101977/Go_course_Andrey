package main

// Цикл for
//Объяснение:
//- Мы инициализируем переменную i значением 0.
//- Цикл for продолжает выполняться, пока условие i < 5 истинно.
//- Внутри цикла мы выводим текущее значение i и увеличиваем его на 1.

//import "fmt"

//func main() {
//	i := 0
//	for i < 5 { // Цикл продолжается, пока i меньше 5
//		fmt.Println(i)
//		i++
//	}
//}

// Цикл for с инициализацией и инкрементом
// В этом варианте можно использовать инициализацию, условие и инкремент в одной строке.
//package main
//
//import "fmt"
//
//func main() {
//	for i := 0; i < 5; i++ { // Инициализация, условие, инкремент
//		fmt.Println(i)
//	}
//}
//Объяснение:
//- Мы инициализируем i значением 0, проверяем, что оно меньше 5, и увеличиваем i на 1 после каждого прохода в цикле.
//- Это аналогично предыдущему примеру, но более компактно записано.

//3. Цикл for по диапазону (range)
//Этот вариант идеально подходит для перебора элементов массива, среза или карты.

//package main

import "fmt"

func main() {
	fruits := []string{"apple", "banana", "cherry"}
	for index, fruit := range fruits { // Перебор среза
		fmt.Printf("%d: %sn", index, fruit)
	}
}
